/**
 * 接口
 *	接口概念：对类的需求描述
 *	接口的特性
 *	接口与抽象类
 *	静态方法：可以在接口中定义一个静态方法。
 *	默认方法：为实现类提供默认方法，接口也可以后期添加新方法。
 *	解决默认方法冲突。
 * 接口示例
 * 	接口与回调
 * 	Comparator接口
 * 	对象克隆
 * lambda表达式
 * 	为什么引入lambda表达式：方便执行代码块
 * 	lambda表达式的语法
 * 	函数式接口：只有一个抽象方法的接口，可以提供一个lambda表示式。
 *	构造器引用
 * 	方法引用
 * 	变量作用域：lambda表达式只能引用值不会改变的变量。
 * 	处理lambda表达式
 * 	再谈Comparator
 * 内部类
 * 	使用内部类访问对象状态
 *	内部类的特殊语法规则
 *	内部类是否又用、必要和安全
 *	局部内部类
 *	由外部方法访问变量
 *	匿名内部类
 *	静态内部类
 * 代理
 * 	何时使用代理
 * 	创建代理对象
 * 	代理类的特性
 * @author niuzhihuan
 */
package ch06;